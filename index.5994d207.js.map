{"mappings":"AAEAA,QAAQC,IAAI,aCFaD,QAAQC,IAAI,eDuBrCD,QAAQC,IAAI,kBAlBkBC,WAC1B,GAAI,kBAAmBC,UACnB,IAEI,MAAMC,QAAqBD,UAAUE,cAAcC,SAAS,aACxDF,EAAaG,WACbP,QAAQC,IAAI,6BACLG,EAAaI,QACpBR,QAAQC,IAAI,4BACLG,EAAaK,QACpBT,QAAQC,IAAI,wBAIpB,CAFE,MAAOS,GACLV,QAAQU,MAAM,4BAA4BA,IAC9C,GAMRC","sources":["src/main.js","src/js/button.js"],"sourcesContent":["import logMessage from \"./js/button\";\r\n\r\nconsole.log(\"I am main\");\r\nlogMessage();\r\n\r\nconst registerServiceWorker = async () => {\r\n    if ('serviceWorker' in navigator) {\r\n        try {\r\n            // path needs to be written relative to the origin, app's root directory\r\n            const registration = await navigator.serviceWorker.register(`src/sw.js`);\r\n            if (registration.installing) {\r\n                console.log('Service worker installing');\r\n            } else if (registration.waiting) {\r\n                console.log('Service worker installed');\r\n            } else if (registration.active) {\r\n                console.log('Service worker active');\r\n            }\r\n        } catch (error) {\r\n            console.error(`Registration failed with ${error}`);\r\n        }\r\n    }\r\n};\r\n\r\nconsole.log(\"After register\")\r\n\r\nregisterServiceWorker();","const logMessage = () => console.log(\"I am button\");\r\n\r\nexport default logMessage;"],"names":["console","log","async","navigator","registration","serviceWorker","register","installing","waiting","active","error","$aa459f0fea9822fe$var$registerServiceWorker"],"version":3,"file":"index.5994d207.js.map"}